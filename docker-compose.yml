version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:4.0.0
    container_name: rabbitmq
    ports:
        - 5672
        - 15672
    volumes:
        - ./data/rabbitmq/data/:/var/lib/rabbitmq/
        - ./data/rabbitmq/log/:/var/log/rabbitmq/
  front-end:
    build: 
      context: ./conazon-front-end/
      dockerfile: Dockerfile
    ports:
      - 3000
    container_name: front-end
    env_file:
      - .env
  users-and-auth:
    build: 
      context: ./conazon-users-and-auth/
      dockerfile: Dockerfile
    container_name: users-and-auth
    env_file:
      - .env.backend
    ports:
      - 8080
    links:
     - postgres
     - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started
    restart: unless-stopped
  products:
    build: 
      context: ./conazon-products/
      dockerfile: Dockerfile
    container_name: products
    env_file:
      - .env.backend
    ports:
      - 8081
    links:
     - postgres
     - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started
    restart: unless-stopped
  cart:
    build: 
      context: ./conazon-cart/
      dockerfile: Dockerfile
    container_name: cart
    env_file:
      - .env.backend
    ports:
      - 8082
    links:
     - postgres
     - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started
    restart: unless-stopped
  checkout:
    build: 
      context: ./conazon-checkout/
      dockerfile: Dockerfile
    container_name: checkout
    env_file:
      - .env.backend
    ports:
      - 8083
    links:
     - postgres
     - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started
    restart: unless-stopped
  nginx:
    image: nginx:stable-alpine3.19
    container_name: nginx
    ports: 
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      users-and-auth:
        condition: service_started
      products:
        condition: service_started
      cart:
        condition: service_started
      checkout:
        condition: service_started
    restart: unless-stopped
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - 5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_DB=conazon
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql